name: Build Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Optional tag name"
        required: false

jobs:
  build-ppx-linux:
    strategy:
      matrix:
        platform: [ubuntu-latest]

    name: Build PPX for release
    runs-on: ${{ matrix.platform }}
    container:
      image: alexfedoseev/alpine-node-yarn-esy:0.0.9
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
        env:
          CI: true
      - name: Esy install
        run: esy install
      - name: Print esy cache
        id: print_esy_cache
        run: node $GITHUB_WORKSPACE/.github/workflows/print_esy_cache.js
      - name: Try to restore dependencies cache
        uses: actions/cache@v2
        id: deps-cache
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: ${{ matrix.platform }}---v1${{ hashFiles('**/index.json') }}
          restore-keys: |
            ${{ matrix.platform }}---v1
      - name: Build PPX
        run: esy linux-release-static
      - name: Copy built PPX file
        run: |
          cp _build/default/bin/RescriptEmbedLang.exe ppx-linux
      - name: Strip binary
        run: |
          strip ppx-linux
      - name: Upload PPX artifact
        uses: actions/upload-artifact@v2
        with:
          name: ppx-linux
          path: ppx-*
          if-no-files-found: error

  build-ppx:
    strategy:
      matrix:
        platform: [
            macos-13, # x64
            macos-14, # ARM,
            windows-latest,
          ]

    name: Build PPX for release
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
        env:
          CI: true
      - name: Install esy
        run: npm install -g esy
      - name: Build PPX
        uses: esy/github-action@master
        with:
          cache-key: ${{ matrix.platform }}-${{ hashFiles('esy.lock/index.json') }}-v3
      - name: Strip PPX binary
        if: runner.os != 'Windows'
        run: |
          strip _build/default/bin/RescriptEmbedLang.exe
      - name: Copy built PPX file
        run: |
          cp _build/default/bin/RescriptEmbedLang.exe ppx-${{ matrix.platform }}
      - name: Upload PPX artifact ${{ matrix.platform }}
        uses: actions/upload-artifact@v2
        with:
          name: ppx-${{ matrix.platform }}
          path: ppx-${{ matrix.platform }}
          if-no-files-found: error

  build-release:
    name: Build release package
    runs-on: ubuntu-latest
    needs: [build-ppx, build-ppx-linux]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: 16
        env:
          CI: true
      - name: Install
        run: npm i
      - name: Build res
        run: npm run build
      - name: Install esy
        run: npm install -g esy
      - name: Build PPX
        uses: esy/github-action@v1
        with:
          cache-key: ${{ hashFiles('esy.lock/index.json') }}
      - name: Build assets
        env:
          INPUT_TAG_NAME: ${{ github.event.inputs.tag_name }}
        run: |
          ./build-release.sh

      - uses: actions/download-artifact@v2
        with:
          name: ppx-linux
          path: release

      - uses: actions/download-artifact@v2
        with:
          name: ppx-macos-13
          path: release

      - uses: actions/download-artifact@v2
        with:
          name: ppx-macos-14
          path: release

      - uses: actions/download-artifact@v2
        with:
          name: ppx-windows-latest
          path: release

      - name: Rename MacOS old binary
        run: |
          mv release/ppx-macos-13 release/ppx-macos-latest

      - name: Rename MacOS ARM64 binary
        run: |
          mv release/ppx-macos-14 release/ppx-macos-arm64

      - name: Remove artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            ppx-linux
            ppx-macos-13
            ppx-macos-14
            ppx-windows-latest
      - name: Upload built folder
        uses: actions/upload-artifact@v2
        with:
          name: release-build
          path: release/
      - uses: JS-DevTools/npm-publish@v1
        if: ${{ github.event.inputs.tag_name }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./release/package.json
          tag: ${{ github.event.inputs.tag_name }}
      - uses: JS-DevTools/npm-publish@v1
        if: ${{ !github.event.inputs.tag_name }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./release/package.json
